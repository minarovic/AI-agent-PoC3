name: Memory Agent CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**/*.py'
      - 'tests/**/*.py'
      - 'requirements*.txt'
      - '.github/workflows/*.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'src/**/*.py'
      - 'tests/**/*.py'
      - 'requirements*.txt'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .
    
    - name: Run tests
      env:
        # Používáme secrets pro API klíče
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        pytest tests/ -v

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 black isort
    
    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Format check with black
      run: |
        black --check src/ tests/
    
    - name: Import sorting check with isort
      run: |
        isort --check-only --profile black src/ tests/

  validate-deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Validate deployment configuration
      run: |
        # Kontrola, že nejsou přítomny testovací soubory
        if [ -d "sandbox" ]; then
          echo "ERROR: sandbox/ directory found in repository!"
          exit 1
        fi
        
        # Kontrola konfigurace LangGraph
        python -c "import json; f = open('langgraph.json'); config = json.load(f); f.close(); exit(0 if 'module' in config else 1)"
        
        # Ověření analýzy typů
        python -c "from memory_agent.analyzer import analyze_company_query; analyze_company_query('Test query')"
