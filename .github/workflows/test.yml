name: Test AI-agent-Ntier

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    
    - name: Clean Python cache
      run: find . -name "*.pyc" -delete && find . -name "__pycache__" -delete
    
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}/src" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Set up environment variables
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
      run: |
        cat > .env << EOL
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
        LANGSMITH_API_KEY=${{ secrets.LANGSMITH_API_KEY }}
        LANGSMITH_PROJECT=AI-agent-Ntier-Test
        LOG_LEVEL=DEBUG
        TEST_MODE=production
        EOL
    
    - name: Test API Keys Configuration
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
      run: python test_api_keys.py
    
    - name: Run tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
      run: |
        echo "PYTHONPATH is: $PYTHONPATH"
        python -c "import sys; print('Python path:', sys.path)"
        pytest --cov=src
    
    - name: Run linters
      run: |
        black --check .
        ruff check .
        
    - name: Verify deployment configuration
      run: |
        python -c "import json; f = open('langgraph.json'); config = json.load(f); assert 'graphs' in config, 'Missing graphs in langgraph.json'"
