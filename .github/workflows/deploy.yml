name: Deploy to LangGraph Platform

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
    paths:
      - 'src/**/*.py'
      - 'requirements.txt'
      - 'requirements-platform.txt'
      - 'langgraph.json'
    tags:
      - 'v*'

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      PYTHONPATH: "${{ github.workspace }}/src"
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Validate deployment
      run: |
        # Kontrola, že nejsou přítomny testovací soubory
        if [ -d "sandbox" ]; then
          echo "ERROR: sandbox/ directory found in repository!"
          exit 1
        fi
        
        # Kontrola konfigurace LangGraph
        python -c "import json; f = open('langgraph.json'); config = json.load(f); f.close(); exit(0 if 'graphs' in config else 1)"
        
        # Ověření analýzy typů
        python -c "from memory_agent.analyzer import analyze_company_query; analyze_company_query('Test query')"
    
  deploy:
    needs: validate
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install langchain-cli
    
    - name: Deploy to LangGraph Platform
      env:
        LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
        LANGCHAIN_PROJECT: ${{ secrets.LANGCHAIN_PROJECT }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        # Zde použijeme langchain CLI pro nasazení na platformu
        langchain app deploy
        
        # Oznámení úspěšného nasazení
        echo "Memory Agent byl úspěšně nasazen na LangGraph Platform!"
