name: Validate Production Code

on:
  push:
    branches: [ '**' ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'setup.py'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Format code with Black (excluding backup files)
      run: |
        # Format only non-backup Python files
        find src -name "*.py" ! -name "*backup*.py" -type f | xargs black --check
    
    - name: Lint with flake8 (excluding backup files)
      run: |
        # Lint only non-backup Python files
        find src -name "*.py" ! -name "*backup*.py" -type f | xargs flake8 --max-line-length=120
    
    - name: Check for test imports
      run: |
        echo "Checking for test imports in production code..."
        ! grep -r "import test_" src/ --include="*.py" --exclude="*test*.py" --exclude="*backup*.py"
        ! grep -r "from test_" src/ --include="*.py" --exclude="*test*.py" --exclude="*backup*.py"
    
    - name: Check for debug prints
      run: |
        echo "Checking for debug prints..."
        ! grep -r "print(" src/ --include="*.py" --exclude="*backup*.py" | grep -v "#.*print"
    
    - name: Check imports
      run: |
        echo "Verifying all imports..."
        find src -name "*.py" ! -name "*backup*.py" -type f -exec python -m py_compile {} \;
